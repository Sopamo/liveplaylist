FORMAT: 1A
HOST: http://liveplaylistv2.meteor.com/

# LivePlaylist

LivePlaylist is a Meteor application with implementations for various platforms.
It enables the user to create and view channels in which they can watch YouTube videos synchronously.

# Initial words

***Note that communicating with the server is only possible via the Meteor [DDP protocol](https://www.meteor.com/ddp). And NOT via normal REST. This also means that the provided examples for the various programming languages do not work.***

Although the REST words GET and POST are used these are not relevant when using the API.
+ POST is used when new data is sent. This is used as [Meteor.call](https://atmospherejs.com/meteor/ddp)
+ GET is used when data is queried. This is used as [Meteor.subscribe](https://atmospherejs.com/meteor/ddp)
+ Ignore the parameters in the URLs. Only use the first word. This is what you want to call/subscribe to. 
    
If the URL is /changeVideo/{channelSlug}/{videoId} use it like: 
    
Meteor.call('changeVideo',{channelSlug:'xxx',videoId:'yyy'})


# Channels

Channels are a collection of videos which might be managed by one or more users (not implemented currently).

A channel has the following attributes:

+ slug - A unique identifier for this channel
+ active - The id of the active YouTube video
+ currentStatus - One of the YouTube YT.PlayerState indicators. Describes the status of the active video:
 + -1 (unstarted)
 + 0 (ended)
 + 1 (playing)
 + 2 (paused)
 + 3 (buffering)
 + 5 (video cued)
+ currentTime - The current position of the playing video (in ms). The real currentTime is: currentTime + (now - currentTimeUpdated)
+ currentTimeUpdated - The time when the last status change was registered. 
+ activeUsers - The amount of users who are currently subscribing to this channel
+ messages - The chat messages


# Videos

A Channel can have 0-n videos. n is currently not limited but should be soon.
A video has the following attributes:
+ title - The title of the video. Taken from the YouTube API.
+ ytid - The YouTube id of the video
+ channel - The slug of the channel this video belongs to
+ duration - The duration of the video in ISO 8601 format e.g. PT4M13S


## Top channels [/topChannels]

### topChannels [GET]

+ Response 200(application/json)

        [
            {
                "title": "Cool rock songs",
                "slug": "cool-rock-songs",
                "active": "IBH4g_ua5es",
                "currentStatus": 1,
                "currentTime": 0,
                "currentTimeUpdated": 1429615671,
                "activeUsers": 5
            }
        ]


## Get a channel by its slug [/channel/{channelSlug}]

+ Parameters
    + channelSlug (required, string, `rock-classics`) - The slug of the channel you want to fetch
    
### channel [GET]

+ Response 200(application/json)

        {
            "title": "Cool rock songs",
            "slug": "cool-rock-songs",
            "active": "IBH4g_ua5es",
            "currentStatus": 1,
            "currentTime": 0,
            "currentTimeUpdated": 1429615671,
            "activeUsers": 5,
            "messages": [
                {
                    name: "Mr. Awesome",
                    message: "Hello :)"
                },
                ...
            ]
        }
        
## Get all videos from a channel by its slug [/channelVideos/{channelSlug}]

+ Parameters
    + channelSlug (required, string, `rock-classics`) - The slug of the channel you want the videos from
    
### channelVideos [GET]

+ Response 200(application/json)

        [
            {
                title: "01. My Dear Frodo- The Hobbit: An Unexpected Journey- Soundtrack", 
                ytid: "_gwLxntIfZY",
                channel: "sopamo"
            },
            {
                title: "You are a Pirate Limewire 10 hours", 
                ytid: "IBH4g_ua5es",
                channel: "sopamo"
            },
            ...
        ]

## Change the active video [/changeVideo/{channelSlug}/{videoId}]

+ Parameters
    + channelSlug (required, string, `rock-classics`)
        The slug of the channel you want to change

    + videoId (required, string, `IBH4g_ua5es`)
        The YouTube id of the video which should be active

### changeVideo [POST]

+ Response 200(boolean)


## Set the video status [/setVideoStatus/{channelSlug}/{status}/{time}]

+ Parameters
    + channelSlug (required, string, `rock-classics`)
        The slug of the channel you want to change
    + status (required, int, `1`)
        The new video status, see the currentStatus Attribute of a channel
    + time (required, float, `74.124`)
        The current position in seconds (with 3 decimals) of the video
    
### setVideoStatus [POST]

+ Response 200(boolean)

## Add a new video to a channel [/addVideo/{channelSlug}/{videoId}]

+ Parameters
    + channelSlug (required, string, `rock-classics`)
        The slug of the channel you want to change
    + videoId (required, string, `IBH4g_ua5es`)
        The YouTube id of the video you want to add

### addVideo [POST]

+ Response 200(boolean)

## Add a chat message to a channel [/addMessage/{channelSlug}/{message}]

The server takes care of assigning a username if the user is not logged in. Otherwise the Name of the logged in user will be used.

+ Parameters
    + channelSlug (required, string, `rock-classics`)
        The slug of the channel you want to change
    + message (required, string, `Hello :)`)
        The message you want to send

### addMessage [POST]

+ Response 200(boolean)


## Register a new user [/register/{username}/{email}/{password}]

+ Parameters
    + username (required, string, `Mr. Awesome`)
        The name of the new user
    + email (required, string, `mr@aweso.me`)
        The users email
    + password (required, string, `imawesomeyeah`)
        The plain text password (This will change probably as it's really insecure.)

### register [POST]

+ Response 200(boolean)









